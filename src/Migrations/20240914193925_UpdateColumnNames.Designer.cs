// <auto-generated />
using BookmarkManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookmarkManager.Migrations
{
    [DbContext(typeof(BookmarkManagerContext))]
    [Migration("20240914193925_UpdateColumnNames")]
    partial class UpdateColumnNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("BookmarkManager.Models.Bookmark", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Bookmarks");
                });

            modelBuilder.Entity("BookmarkManager.Models.Tag", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("bookmarkid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("bookmarkid");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BookmarkManager.Models.Tag", b =>
                {
                    b.HasOne("BookmarkManager.Models.Bookmark", "bookmark")
                        .WithMany("tags")
                        .HasForeignKey("bookmarkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bookmark");
                });

            modelBuilder.Entity("BookmarkManager.Models.Bookmark", b =>
                {
                    b.Navigation("tags");
                });
#pragma warning restore 612, 618
        }
    }
}
